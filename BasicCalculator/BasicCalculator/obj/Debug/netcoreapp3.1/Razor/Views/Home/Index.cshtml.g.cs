#pragma checksum "D:\basic calculator\BasicCalculator\BasicCalculator\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "09ad83371ada40245daf5387cae853b653e94de4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\basic calculator\BasicCalculator\BasicCalculator\Views\_ViewImports.cshtml"
using BasicCalculator;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\basic calculator\BasicCalculator\BasicCalculator\Views\_ViewImports.cshtml"
using BasicCalculator.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"09ad83371ada40245daf5387cae853b653e94de4", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9d349eec2d6155d98be71ac81624f0aa4ada8b3c", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\basic calculator\BasicCalculator\BasicCalculator\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n <div class=\"text-center\">\r\n    <input class=\"form-control\" id=\"result\" type=\"text\" disabled");
            BeginWriteAttribute("value", " value=\"", 139, "\"", 147, 0);
            EndWriteAttribute();
            WriteLiteral(@">
    <table>
        <tr>
            <td>&nbsp;</td>
            <td>&nbsp;</td>
            <td>&nbsp;<input class=""buttonSize"" id=""ButtonAC"" type=""button"" value=""AC"" ></td>
            <td>&nbsp;<input class=""buttonSize"" id=""ButtonDel"" type=""button"" value=""Del"" ></td>
        </tr>
        <tr>
            <td>&nbsp;<input class=""buttonSize"" id=""Button7"" type=""button"" value=""7"" onclick=""num7()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button8"" type=""button"" value=""8"" onclick=""num8()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button9"" type=""button"" value=""9"" onclick=""num9()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""ButtonDiv"" type=""button"" value=""รท"" ></td>
        </tr>
        <tr>
            <td>&nbsp;<input class=""buttonSize"" id=""Button4"" type=""button"" value=""4"" onclick=""num4()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button5"" type=""button"" value=""5"" onclick=""num5()""></td>
            <td>&nbsp;<input class=""buttonSize");
            WriteLiteral(@""" id=""Button6"" type=""button"" value=""6"" onclick=""num6()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""ButtonMul"" type=""button"" value=""ร"" ></td>
        </tr>
        <tr>
            <td>&nbsp;<input class=""buttonSize"" id=""Button1"" type=""button"" value=""1"" onclick=""num1()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button2"" type=""button"" value=""2"" onclick=""num2()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button3"" type=""button"" value=""3"" onclick=""num3()"" ></td>
            <td>&nbsp;<input class=""buttonSize"" id=""ButtonSub"" type=""button"" value=""-"" ></td>
        </tr>
        <tr>
            <td>&nbsp;<input class=""buttonSize"" id=""Button."" type=""button"" value=""."" ></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button0"" type=""button"" value=""0"" onclick=""num0()""></td>
            <td>&nbsp;<input class=""buttonSize"" id=""Button="" type=""button"" value=""="" ></td>
            <td>&nbsp;<input class=""buttonSize"" id=""ButtonAdd"" type=""button"" value=""+"" ></");
            WriteLiteral("td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n\r\n<div>\r\n    <h2>Part I</h2>\r\n    click here ==>\r\n    <a");
            BeginWriteAttribute("href", " href=\"", 2294, "\"", 2301, 0);
            EndWriteAttribute();
            WriteLiteral(" onclick=\"MakeReq(\'https://localhost:44316/Home/Message01\', \'p01\'); return false;\">hello</a>\r\n    <div id=\"p01\"></div>\r\n</div>\r\n<div>\r\n    <h2>Part II</h2>\r\n    click here ==>\r\n    <a");
            BeginWriteAttribute("href", " href=\"", 2485, "\"", 2492, 0);
            EndWriteAttribute();
            WriteLiteral(@" onclick=""MakeReq('https://localhost:44316/Home/Message02', 'p02'); return false;"">test</a>
    <div id=""p02""></div>
</div>


<script>
    var xmlhttp = new XMLHttpRequest();
    function MakeReq(serverpage, objID) {
        let obj = document.getElementById(objID);
        xmlhttp.open(""GET"", serverpage);
        xmlhttp.onreadystatechange = function () {
            if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                obj.innerHTML = xmlhttp.responseText;
            }
        }
        xmlhttp.send(null);
    }

    function num0() {
        display = document.getElementById('result');
        display.value = display.value.concat('0');
    }

    function num1() {
        display = document.getElementById('result');
        display.value = display.value.concat('1');
    }

    function num2() {
        display = document.getElementById('result');
        display.value = display.value.concat('2');
    }

    function num3() {
        display = document.ge");
            WriteLiteral(@"tElementById('result');
        display.value = display.value.concat('3');
    }

    function num4() {
        display = document.getElementById('result');
        display.value = display.value.concat('4');
    }

    function num5() {
        display = document.getElementById('result');
        display.value = display.value.concat('5');
    }

    function num6() {
        display = document.getElementById('result');
        display.value = display.value.concat('6');
    }

    function num7() {
        display = document.getElementById('result');
        display.value = display.value.concat('7');
    }

    function num8() {
        display = document.getElementById('result');
        display.value = display.value.concat('8');
    }

    function num9() {
        display = document.getElementById('result');
        display.value = display.value.concat('9');
    }
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
